/**
 * generated by Xtext 2.12.0
 */
package org.xtext.whpp.mydsl.wh.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.whpp.mydsl.wh.Command;
import org.xtext.whpp.mydsl.wh.Commands;
import org.xtext.whpp.mydsl.wh.Expr;
import org.xtext.whpp.mydsl.wh.Exprs;
import org.xtext.whpp.mydsl.wh.Variables;
import org.xtext.whpp.mydsl.wh.WhPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Command</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.whpp.mydsl.wh.impl.CommandImpl#getCommand <em>Command</em>}</li>
 *   <li>{@link org.xtext.whpp.mydsl.wh.impl.CommandImpl#getVariables <em>Variables</em>}</li>
 *   <li>{@link org.xtext.whpp.mydsl.wh.impl.CommandImpl#getExrps <em>Exrps</em>}</li>
 *   <li>{@link org.xtext.whpp.mydsl.wh.impl.CommandImpl#getExpr <em>Expr</em>}</li>
 *   <li>{@link org.xtext.whpp.mydsl.wh.impl.CommandImpl#getCommands <em>Commands</em>}</li>
 *   <li>{@link org.xtext.whpp.mydsl.wh.impl.CommandImpl#getCommands_then <em>Commands then</em>}</li>
 *   <li>{@link org.xtext.whpp.mydsl.wh.impl.CommandImpl#getCommands_else <em>Commands else</em>}</li>
 *   <li>{@link org.xtext.whpp.mydsl.wh.impl.CommandImpl#getExpr_in <em>Expr in</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CommandImpl extends MinimalEObjectImpl.Container implements Command
{
  /**
   * The default value of the '{@link #getCommand() <em>Command</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommand()
   * @generated
   * @ordered
   */
  protected static final String COMMAND_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCommand() <em>Command</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommand()
   * @generated
   * @ordered
   */
  protected String command = COMMAND_EDEFAULT;

  /**
   * The cached value of the '{@link #getVariables() <em>Variables</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariables()
   * @generated
   * @ordered
   */
  protected Variables variables;

  /**
   * The cached value of the '{@link #getExrps() <em>Exrps</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExrps()
   * @generated
   * @ordered
   */
  protected Exprs exrps;

  /**
   * The cached value of the '{@link #getExpr() <em>Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpr()
   * @generated
   * @ordered
   */
  protected Expr expr;

  /**
   * The cached value of the '{@link #getCommands() <em>Commands</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommands()
   * @generated
   * @ordered
   */
  protected Commands commands;

  /**
   * The cached value of the '{@link #getCommands_then() <em>Commands then</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommands_then()
   * @generated
   * @ordered
   */
  protected Commands commands_then;

  /**
   * The cached value of the '{@link #getCommands_else() <em>Commands else</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommands_else()
   * @generated
   * @ordered
   */
  protected Commands commands_else;

  /**
   * The cached value of the '{@link #getExpr_in() <em>Expr in</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpr_in()
   * @generated
   * @ordered
   */
  protected Expr expr_in;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CommandImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WhPackage.Literals.COMMAND;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getCommand()
  {
    return command;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCommand(String newCommand)
  {
    String oldCommand = command;
    command = newCommand;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WhPackage.COMMAND__COMMAND, oldCommand, command));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Variables getVariables()
  {
    return variables;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVariables(Variables newVariables, NotificationChain msgs)
  {
    Variables oldVariables = variables;
    variables = newVariables;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WhPackage.COMMAND__VARIABLES, oldVariables, newVariables);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVariables(Variables newVariables)
  {
    if (newVariables != variables)
    {
      NotificationChain msgs = null;
      if (variables != null)
        msgs = ((InternalEObject)variables).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WhPackage.COMMAND__VARIABLES, null, msgs);
      if (newVariables != null)
        msgs = ((InternalEObject)newVariables).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WhPackage.COMMAND__VARIABLES, null, msgs);
      msgs = basicSetVariables(newVariables, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WhPackage.COMMAND__VARIABLES, newVariables, newVariables));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Exprs getExrps()
  {
    return exrps;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExrps(Exprs newExrps, NotificationChain msgs)
  {
    Exprs oldExrps = exrps;
    exrps = newExrps;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WhPackage.COMMAND__EXRPS, oldExrps, newExrps);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExrps(Exprs newExrps)
  {
    if (newExrps != exrps)
    {
      NotificationChain msgs = null;
      if (exrps != null)
        msgs = ((InternalEObject)exrps).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WhPackage.COMMAND__EXRPS, null, msgs);
      if (newExrps != null)
        msgs = ((InternalEObject)newExrps).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WhPackage.COMMAND__EXRPS, null, msgs);
      msgs = basicSetExrps(newExrps, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WhPackage.COMMAND__EXRPS, newExrps, newExrps));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expr getExpr()
  {
    return expr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpr(Expr newExpr, NotificationChain msgs)
  {
    Expr oldExpr = expr;
    expr = newExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WhPackage.COMMAND__EXPR, oldExpr, newExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpr(Expr newExpr)
  {
    if (newExpr != expr)
    {
      NotificationChain msgs = null;
      if (expr != null)
        msgs = ((InternalEObject)expr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WhPackage.COMMAND__EXPR, null, msgs);
      if (newExpr != null)
        msgs = ((InternalEObject)newExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WhPackage.COMMAND__EXPR, null, msgs);
      msgs = basicSetExpr(newExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WhPackage.COMMAND__EXPR, newExpr, newExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Commands getCommands()
  {
    return commands;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCommands(Commands newCommands, NotificationChain msgs)
  {
    Commands oldCommands = commands;
    commands = newCommands;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WhPackage.COMMAND__COMMANDS, oldCommands, newCommands);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCommands(Commands newCommands)
  {
    if (newCommands != commands)
    {
      NotificationChain msgs = null;
      if (commands != null)
        msgs = ((InternalEObject)commands).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WhPackage.COMMAND__COMMANDS, null, msgs);
      if (newCommands != null)
        msgs = ((InternalEObject)newCommands).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WhPackage.COMMAND__COMMANDS, null, msgs);
      msgs = basicSetCommands(newCommands, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WhPackage.COMMAND__COMMANDS, newCommands, newCommands));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Commands getCommands_then()
  {
    return commands_then;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCommands_then(Commands newCommands_then, NotificationChain msgs)
  {
    Commands oldCommands_then = commands_then;
    commands_then = newCommands_then;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WhPackage.COMMAND__COMMANDS_THEN, oldCommands_then, newCommands_then);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCommands_then(Commands newCommands_then)
  {
    if (newCommands_then != commands_then)
    {
      NotificationChain msgs = null;
      if (commands_then != null)
        msgs = ((InternalEObject)commands_then).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WhPackage.COMMAND__COMMANDS_THEN, null, msgs);
      if (newCommands_then != null)
        msgs = ((InternalEObject)newCommands_then).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WhPackage.COMMAND__COMMANDS_THEN, null, msgs);
      msgs = basicSetCommands_then(newCommands_then, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WhPackage.COMMAND__COMMANDS_THEN, newCommands_then, newCommands_then));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Commands getCommands_else()
  {
    return commands_else;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCommands_else(Commands newCommands_else, NotificationChain msgs)
  {
    Commands oldCommands_else = commands_else;
    commands_else = newCommands_else;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WhPackage.COMMAND__COMMANDS_ELSE, oldCommands_else, newCommands_else);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCommands_else(Commands newCommands_else)
  {
    if (newCommands_else != commands_else)
    {
      NotificationChain msgs = null;
      if (commands_else != null)
        msgs = ((InternalEObject)commands_else).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WhPackage.COMMAND__COMMANDS_ELSE, null, msgs);
      if (newCommands_else != null)
        msgs = ((InternalEObject)newCommands_else).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WhPackage.COMMAND__COMMANDS_ELSE, null, msgs);
      msgs = basicSetCommands_else(newCommands_else, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WhPackage.COMMAND__COMMANDS_ELSE, newCommands_else, newCommands_else));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expr getExpr_in()
  {
    return expr_in;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpr_in(Expr newExpr_in, NotificationChain msgs)
  {
    Expr oldExpr_in = expr_in;
    expr_in = newExpr_in;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WhPackage.COMMAND__EXPR_IN, oldExpr_in, newExpr_in);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpr_in(Expr newExpr_in)
  {
    if (newExpr_in != expr_in)
    {
      NotificationChain msgs = null;
      if (expr_in != null)
        msgs = ((InternalEObject)expr_in).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WhPackage.COMMAND__EXPR_IN, null, msgs);
      if (newExpr_in != null)
        msgs = ((InternalEObject)newExpr_in).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WhPackage.COMMAND__EXPR_IN, null, msgs);
      msgs = basicSetExpr_in(newExpr_in, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WhPackage.COMMAND__EXPR_IN, newExpr_in, newExpr_in));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WhPackage.COMMAND__VARIABLES:
        return basicSetVariables(null, msgs);
      case WhPackage.COMMAND__EXRPS:
        return basicSetExrps(null, msgs);
      case WhPackage.COMMAND__EXPR:
        return basicSetExpr(null, msgs);
      case WhPackage.COMMAND__COMMANDS:
        return basicSetCommands(null, msgs);
      case WhPackage.COMMAND__COMMANDS_THEN:
        return basicSetCommands_then(null, msgs);
      case WhPackage.COMMAND__COMMANDS_ELSE:
        return basicSetCommands_else(null, msgs);
      case WhPackage.COMMAND__EXPR_IN:
        return basicSetExpr_in(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WhPackage.COMMAND__COMMAND:
        return getCommand();
      case WhPackage.COMMAND__VARIABLES:
        return getVariables();
      case WhPackage.COMMAND__EXRPS:
        return getExrps();
      case WhPackage.COMMAND__EXPR:
        return getExpr();
      case WhPackage.COMMAND__COMMANDS:
        return getCommands();
      case WhPackage.COMMAND__COMMANDS_THEN:
        return getCommands_then();
      case WhPackage.COMMAND__COMMANDS_ELSE:
        return getCommands_else();
      case WhPackage.COMMAND__EXPR_IN:
        return getExpr_in();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WhPackage.COMMAND__COMMAND:
        setCommand((String)newValue);
        return;
      case WhPackage.COMMAND__VARIABLES:
        setVariables((Variables)newValue);
        return;
      case WhPackage.COMMAND__EXRPS:
        setExrps((Exprs)newValue);
        return;
      case WhPackage.COMMAND__EXPR:
        setExpr((Expr)newValue);
        return;
      case WhPackage.COMMAND__COMMANDS:
        setCommands((Commands)newValue);
        return;
      case WhPackage.COMMAND__COMMANDS_THEN:
        setCommands_then((Commands)newValue);
        return;
      case WhPackage.COMMAND__COMMANDS_ELSE:
        setCommands_else((Commands)newValue);
        return;
      case WhPackage.COMMAND__EXPR_IN:
        setExpr_in((Expr)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WhPackage.COMMAND__COMMAND:
        setCommand(COMMAND_EDEFAULT);
        return;
      case WhPackage.COMMAND__VARIABLES:
        setVariables((Variables)null);
        return;
      case WhPackage.COMMAND__EXRPS:
        setExrps((Exprs)null);
        return;
      case WhPackage.COMMAND__EXPR:
        setExpr((Expr)null);
        return;
      case WhPackage.COMMAND__COMMANDS:
        setCommands((Commands)null);
        return;
      case WhPackage.COMMAND__COMMANDS_THEN:
        setCommands_then((Commands)null);
        return;
      case WhPackage.COMMAND__COMMANDS_ELSE:
        setCommands_else((Commands)null);
        return;
      case WhPackage.COMMAND__EXPR_IN:
        setExpr_in((Expr)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WhPackage.COMMAND__COMMAND:
        return COMMAND_EDEFAULT == null ? command != null : !COMMAND_EDEFAULT.equals(command);
      case WhPackage.COMMAND__VARIABLES:
        return variables != null;
      case WhPackage.COMMAND__EXRPS:
        return exrps != null;
      case WhPackage.COMMAND__EXPR:
        return expr != null;
      case WhPackage.COMMAND__COMMANDS:
        return commands != null;
      case WhPackage.COMMAND__COMMANDS_THEN:
        return commands_then != null;
      case WhPackage.COMMAND__COMMANDS_ELSE:
        return commands_else != null;
      case WhPackage.COMMAND__EXPR_IN:
        return expr_in != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (command: ");
    result.append(command);
    result.append(')');
    return result.toString();
  }

} //CommandImpl
