/*
 * generated by Xtext 2.13.0
 */
grammar InternalWh;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.whpp.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.whpp.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.whpp.mydsl.services.WhGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private WhGrammarAccess grammarAccess;

    public InternalWhParser(TokenStream input, WhGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected WhGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_0());
			}
			lv_functions_0_0=ruleFunction
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"functions",
					lv_functions_0_0,
					"org.xtext.whpp.mydsl.Wh.Function");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='function'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getFunctionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_SYMBOLE
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFunctionAccess().getNameSYMBOLETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.whpp.mydsl.Wh.SYMBOLE");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getDefinitionDefinitionParserRuleCall_3_0());
				}
				lv_definition_3_0=ruleDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"definition",
						lv_definition_3_0,
						"org.xtext.whpp.mydsl.Wh.Definition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	iv_ruleDefinition=ruleDefinition
	{ $current=$iv_ruleDefinition.current; }
	EOF;

// Rule Definition
ruleDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='read'
			{
				newLeafNode(otherlv_0, grammarAccess.getDefinitionAccess().getReadKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDefinitionAccess().getInputInputParserRuleCall_0_1_0());
					}
					lv_input_1_0=ruleInput
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDefinitionRule());
						}
						set(
							$current,
							"input",
							lv_input_1_0,
							"org.xtext.whpp.mydsl.Wh.Input");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_2='%'
			{
				newLeafNode(otherlv_2, grammarAccess.getDefinitionAccess().getPercentSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDefinitionAccess().getCommandsCommandsParserRuleCall_1_1_0());
					}
					lv_commands_3_0=ruleCommands
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDefinitionRule());
						}
						set(
							$current,
							"commands",
							lv_commands_3_0,
							"org.xtext.whpp.mydsl.Wh.Commands");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_4='%'
			{
				newLeafNode(otherlv_4, grammarAccess.getDefinitionAccess().getPercentSignKeyword_2_0());
			}
			otherlv_5='write'
			{
				newLeafNode(otherlv_5, grammarAccess.getDefinitionAccess().getWriteKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDefinitionAccess().getOutputOutputParserRuleCall_2_2_0());
					}
					lv_output_6_0=ruleOutput
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDefinitionRule());
						}
						set(
							$current,
							"output",
							lv_output_6_0,
							"org.xtext.whpp.mydsl.Wh.Output");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleInput
entryRuleInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputRule()); }
	iv_ruleInput=ruleInput
	{ $current=$iv_ruleInput.current; }
	EOF;

// Rule Input
ruleInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getInputAccess().getVariablesVariablesParserRuleCall_0());
			}
			lv_variables_0_0=ruleVariables
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getInputRule());
				}
				set(
					$current,
					"variables",
					lv_variables_0_0,
					"org.xtext.whpp.mydsl.Wh.Variables");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleOutput
entryRuleOutput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputRule()); }
	iv_ruleOutput=ruleOutput
	{ $current=$iv_ruleOutput.current; }
	EOF;

// Rule Output
ruleOutput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getOutputAccess().getVariablesVariablesParserRuleCall_0());
			}
			lv_variables_0_0=ruleVariables
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getOutputRule());
				}
				set(
					$current,
					"variables",
					lv_variables_0_0,
					"org.xtext.whpp.mydsl.Wh.Variables");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleVariables
entryRuleVariables returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariablesRule()); }
	iv_ruleVariables=ruleVariables
	{ $current=$iv_ruleVariables.current; }
	EOF;

// Rule Variables
ruleVariables returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_variables_0_0=RULE_VARIABLE
				{
					newLeafNode(lv_variables_0_0, grammarAccess.getVariablesAccess().getVariablesVARIABLETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariablesRule());
					}
					addWithLastConsumed(
						$current,
						"variables",
						lv_variables_0_0,
						"org.xtext.whpp.mydsl.Wh.VARIABLE");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getVariablesAccess().getCommaKeyword_1_0());
			}
			(
				(
					lv_variables_2_0=RULE_VARIABLE
					{
						newLeafNode(lv_variables_2_0, grammarAccess.getVariablesAccess().getVariablesVARIABLETerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariablesRule());
						}
						addWithLastConsumed(
							$current,
							"variables",
							lv_variables_2_0,
							"org.xtext.whpp.mydsl.Wh.VARIABLE");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCommands
entryRuleCommands returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandsRule()); }
	iv_ruleCommands=ruleCommands
	{ $current=$iv_ruleCommands.current; }
	EOF;

// Rule Commands
ruleCommands returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_0_0());
				}
				lv_commands_0_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandsRule());
					}
					add(
						$current,
						"commands",
						lv_commands_0_0,
						"org.xtext.whpp.mydsl.Wh.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_1_1_0());
					}
					lv_commands_2_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandsRule());
						}
						add(
							$current,
							"commands",
							lv_commands_2_0,
							"org.xtext.whpp.mydsl.Wh.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_command_0_0='nop'
				{
					newLeafNode(lv_command_0_0, grammarAccess.getCommandAccess().getCommandNopKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommandRule());
					}
					setWithLastConsumed($current, "command", lv_command_0_0, "nop");
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getVariablesVariablesParserRuleCall_1_0_0());
					}
					lv_variables_1_0=ruleVariables
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"variables",
							lv_variables_1_0,
							"org.xtext.whpp.mydsl.Wh.Variables");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_command_2_0=':='
					{
						newLeafNode(lv_command_2_0, grammarAccess.getCommandAccess().getCommandColonEqualsSignKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCommandRule());
						}
						setWithLastConsumed($current, "command", lv_command_2_0, ":=");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getExrpsExprsParserRuleCall_1_2_0());
					}
					lv_exrps_3_0=ruleExprs
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"exrps",
							lv_exrps_3_0,
							"org.xtext.whpp.mydsl.Wh.Exprs");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_command_4_0='while'
					{
						newLeafNode(lv_command_4_0, grammarAccess.getCommandAccess().getCommandWhileKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCommandRule());
						}
						setWithLastConsumed($current, "command", lv_command_4_0, "while");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getExprExprParserRuleCall_2_1_0());
					}
					lv_expr_5_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"expr",
							lv_expr_5_0,
							"org.xtext.whpp.mydsl.Wh.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='do'
			{
				newLeafNode(otherlv_6, grammarAccess.getCommandAccess().getDoKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getCommandsCommandsParserRuleCall_2_3_0());
					}
					lv_commands_7_0=ruleCommands
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"commands",
							lv_commands_7_0,
							"org.xtext.whpp.mydsl.Wh.Commands");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8='od'
			{
				newLeafNode(otherlv_8, grammarAccess.getCommandAccess().getOdKeyword_2_4());
			}
		)
		    |
		(
			(
				(
					lv_command_9_0='for'
					{
						newLeafNode(lv_command_9_0, grammarAccess.getCommandAccess().getCommandForKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCommandRule());
						}
						setWithLastConsumed($current, "command", lv_command_9_0, "for");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getExprExprParserRuleCall_3_1_0());
					}
					lv_expr_10_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"expr",
							lv_expr_10_0,
							"org.xtext.whpp.mydsl.Wh.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11='do'
			{
				newLeafNode(otherlv_11, grammarAccess.getCommandAccess().getDoKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getCommandsCommandsParserRuleCall_3_3_0());
					}
					lv_commands_12_0=ruleCommands
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"commands",
							lv_commands_12_0,
							"org.xtext.whpp.mydsl.Wh.Commands");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13='od'
			{
				newLeafNode(otherlv_13, grammarAccess.getCommandAccess().getOdKeyword_3_4());
			}
		)
		    |
		(
			(
				(
					lv_command_14_0='if'
					{
						newLeafNode(lv_command_14_0, grammarAccess.getCommandAccess().getCommandIfKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCommandRule());
						}
						setWithLastConsumed($current, "command", lv_command_14_0, "if");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getExprExprParserRuleCall_4_1_0());
					}
					lv_expr_15_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"expr",
							lv_expr_15_0,
							"org.xtext.whpp.mydsl.Wh.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_16='then'
			{
				newLeafNode(otherlv_16, grammarAccess.getCommandAccess().getThenKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getCommands_thenCommandsParserRuleCall_4_3_0());
					}
					lv_commands_then_17_0=ruleCommands
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"commands_then",
							lv_commands_then_17_0,
							"org.xtext.whpp.mydsl.Wh.Commands");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18='else'
				{
					newLeafNode(otherlv_18, grammarAccess.getCommandAccess().getElseKeyword_4_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCommandAccess().getCommands_elseCommandsParserRuleCall_4_4_1_0());
						}
						lv_commands_else_19_0=ruleCommands
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommandRule());
							}
							set(
								$current,
								"commands_else",
								lv_commands_else_19_0,
								"org.xtext.whpp.mydsl.Wh.Commands");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			otherlv_20='fi'
			{
				newLeafNode(otherlv_20, grammarAccess.getCommandAccess().getFiKeyword_4_5());
			}
		)
		    |
		(
			(
				(
					lv_command_21_0='foreach'
					{
						newLeafNode(lv_command_21_0, grammarAccess.getCommandAccess().getCommandForeachKeyword_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCommandRule());
						}
						setWithLastConsumed($current, "command", lv_command_21_0, "foreach");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getExprExprParserRuleCall_5_1_0());
					}
					lv_expr_22_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"expr",
							lv_expr_22_0,
							"org.xtext.whpp.mydsl.Wh.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_23='in'
			{
				newLeafNode(otherlv_23, grammarAccess.getCommandAccess().getInKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getExpr_inExprParserRuleCall_5_3_0());
					}
					lv_expr_in_24_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"expr_in",
							lv_expr_in_24_0,
							"org.xtext.whpp.mydsl.Wh.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_25='do'
			{
				newLeafNode(otherlv_25, grammarAccess.getCommandAccess().getDoKeyword_5_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getCommandsCommandsParserRuleCall_5_5_0());
					}
					lv_commands_26_0=ruleCommands
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"commands",
							lv_commands_26_0,
							"org.xtext.whpp.mydsl.Wh.Commands");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_27='od'
			{
				newLeafNode(otherlv_27, grammarAccess.getCommandAccess().getOdKeyword_5_6());
			}
		)
	)
;

// Entry rule entryRuleExprs
entryRuleExprs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprsRule()); }
	iv_ruleExprs=ruleExprs
	{ $current=$iv_ruleExprs.current; }
	EOF;

// Rule Exprs
ruleExprs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExprsAccess().getExprsExprParserRuleCall_0_0());
				}
				lv_exprs_0_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprsRule());
					}
					add(
						$current,
						"exprs",
						lv_exprs_0_0,
						"org.xtext.whpp.mydsl.Wh.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getExprsAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExprsAccess().getExprsExprParserRuleCall_1_1_0());
					}
					lv_exprs_2_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprsRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_2_0,
							"org.xtext.whpp.mydsl.Wh.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpr
entryRuleExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprRule()); }
	iv_ruleExpr=ruleExpr
	{ $current=$iv_ruleExpr.current; }
	EOF;

// Rule Expr
ruleExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				((
					ruleExprsimple
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getExprAccess().getExprsimple1ExprsimpleParserRuleCall_0_0_0());
					}
					lv_exprsimple1_0_0=ruleExprsimple
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprRule());
						}
						set(
							$current,
							"exprsimple1",
							lv_exprsimple1_0_0,
							"org.xtext.whpp.mydsl.Wh.Exprsimple");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					((
						'=?'
					)
					)=>
					(
						lv_expr_1_0='=?'
						{
							newLeafNode(lv_expr_1_0, grammarAccess.getExprAccess().getExprEqualsSignQuestionMarkKeyword_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExprRule());
							}
							setWithLastConsumed($current, "expr", lv_expr_1_0, "=?");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getExprAccess().getExprsimple2ExprsimpleParserRuleCall_0_1_1_0());
						}
						lv_exprsimple2_2_0=ruleExprsimple
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExprRule());
							}
							set(
								$current,
								"exprsimple2",
								lv_exprsimple2_2_0,
								"org.xtext.whpp.mydsl.Wh.Exprsimple");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getExprAccess().getExprandExprandParserRuleCall_1_0());
				}
				lv_exprand_3_0=ruleExprand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprRule());
					}
					set(
						$current,
						"exprand",
						lv_exprand_3_0,
						"org.xtext.whpp.mydsl.Wh.Exprand");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExprsimple
entryRuleExprsimple returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprsimpleRule()); }
	iv_ruleExprsimple=ruleExprsimple
	{ $current=$iv_ruleExprsimple.current; }
	EOF;

// Rule Exprsimple
ruleExprsimple returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_expr_0_1='nil'
					{
						newLeafNode(lv_expr_0_1, grammarAccess.getExprsimpleAccess().getExprNilKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExprsimpleRule());
						}
						setWithLastConsumed($current, "expr", lv_expr_0_1, null);
					}
					    |
					lv_expr_0_2=RULE_VARIABLE
					{
						newLeafNode(lv_expr_0_2, grammarAccess.getExprsimpleAccess().getExprVARIABLETerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExprsimpleRule());
						}
						setWithLastConsumed(
							$current,
							"expr",
							lv_expr_0_2,
							"org.xtext.whpp.mydsl.Wh.VARIABLE");
					}
					    |
					lv_expr_0_3=RULE_SYMBOLE
					{
						newLeafNode(lv_expr_0_3, grammarAccess.getExprsimpleAccess().getExprSYMBOLETerminalRuleCall_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExprsimpleRule());
						}
						setWithLastConsumed(
							$current,
							"expr",
							lv_expr_0_3,
							"org.xtext.whpp.mydsl.Wh.SYMBOLE");
					}
				)
			)
		)
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getExprsimpleAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					(
						lv_expr_2_1='cons'
						{
							newLeafNode(lv_expr_2_1, grammarAccess.getExprsimpleAccess().getExprConsKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExprsimpleRule());
							}
							setWithLastConsumed($current, "expr", lv_expr_2_1, null);
						}
						    |
						lv_expr_2_2='list'
						{
							newLeafNode(lv_expr_2_2, grammarAccess.getExprsimpleAccess().getExprListKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExprsimpleRule());
							}
							setWithLastConsumed($current, "expr", lv_expr_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExprsimpleAccess().getExprsLexprParserRuleCall_1_2_0());
					}
					lv_exprs_3_0=ruleLexpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprsimpleRule());
						}
						set(
							$current,
							"exprs",
							lv_exprs_3_0,
							"org.xtext.whpp.mydsl.Wh.Lexpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getExprsimpleAccess().getRightParenthesisKeyword_1_3());
			}
		)
		    |
		(
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getExprsimpleAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					(
						lv_expr_6_1='hd'
						{
							newLeafNode(lv_expr_6_1, grammarAccess.getExprsimpleAccess().getExprHdKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExprsimpleRule());
							}
							setWithLastConsumed($current, "expr", lv_expr_6_1, null);
						}
						    |
						lv_expr_6_2='tl'
						{
							newLeafNode(lv_expr_6_2, grammarAccess.getExprsimpleAccess().getExprTlKeyword_2_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExprsimpleRule());
							}
							setWithLastConsumed($current, "expr", lv_expr_6_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExprsimpleAccess().getExpr2ExprParserRuleCall_2_2_0());
					}
					lv_expr2_7_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprsimpleRule());
						}
						set(
							$current,
							"expr2",
							lv_expr2_7_0,
							"org.xtext.whpp.mydsl.Wh.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getExprsimpleAccess().getRightParenthesisKeyword_2_3());
			}
		)
		    |
		(
			otherlv_9='('
			{
				newLeafNode(otherlv_9, grammarAccess.getExprsimpleAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					lv_expr_10_0=RULE_SYMBOLE
					{
						newLeafNode(lv_expr_10_0, grammarAccess.getExprsimpleAccess().getExprSYMBOLETerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExprsimpleRule());
						}
						setWithLastConsumed(
							$current,
							"expr",
							lv_expr_10_0,
							"org.xtext.whpp.mydsl.Wh.SYMBOLE");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExprsimpleAccess().getExprsLexprParserRuleCall_3_2_0());
					}
					lv_exprs_11_0=ruleLexpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprsimpleRule());
						}
						set(
							$current,
							"exprs",
							lv_exprs_11_0,
							"org.xtext.whpp.mydsl.Wh.Lexpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getExprsimpleAccess().getRightParenthesisKeyword_3_3());
			}
		)
	)
;

// Entry rule entryRuleExprand
entryRuleExprand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprandRule()); }
	iv_ruleExprand=ruleExprand
	{ $current=$iv_ruleExprand.current; }
	EOF;

// Rule Exprand
ruleExprand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExprandAccess().getExprGExprorParserRuleCall_0_0());
				}
				lv_exprG_0_0=ruleExpror
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprandRule());
					}
					set(
						$current,
						"exprG",
						lv_exprG_0_0,
						"org.xtext.whpp.mydsl.Wh.Expror");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_expr_1_0='and'
					{
						newLeafNode(lv_expr_1_0, grammarAccess.getExprandAccess().getExprAndKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExprandRule());
						}
						setWithLastConsumed($current, "expr", lv_expr_1_0, "and");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExprandAccess().getExprDExprandParserRuleCall_1_1_0());
					}
					lv_exprD_2_0=ruleExprand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprandRule());
						}
						set(
							$current,
							"exprD",
							lv_exprD_2_0,
							"org.xtext.whpp.mydsl.Wh.Exprand");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpror
entryRuleExpror returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprorRule()); }
	iv_ruleExpror=ruleExpror
	{ $current=$iv_ruleExpror.current; }
	EOF;

// Rule Expror
ruleExpror returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExprorAccess().getExprGExprnotParserRuleCall_0_0());
				}
				lv_exprG_0_0=ruleExprnot
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprorRule());
					}
					set(
						$current,
						"exprG",
						lv_exprG_0_0,
						"org.xtext.whpp.mydsl.Wh.Exprnot");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_expr_1_0='or'
					{
						newLeafNode(lv_expr_1_0, grammarAccess.getExprorAccess().getExprOrKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExprorRule());
						}
						setWithLastConsumed($current, "expr", lv_expr_1_0, "or");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExprorAccess().getExprDExprorParserRuleCall_1_1_0());
					}
					lv_exprD_2_0=ruleExpror
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprorRule());
						}
						set(
							$current,
							"exprD",
							lv_exprD_2_0,
							"org.xtext.whpp.mydsl.Wh.Expror");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExprnot
entryRuleExprnot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprnotRule()); }
	iv_ruleExprnot=ruleExprnot
	{ $current=$iv_ruleExprnot.current; }
	EOF;

// Rule Exprnot
ruleExprnot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_expr_0_0='not'
				{
					newLeafNode(lv_expr_0_0, grammarAccess.getExprnotAccess().getExprNotKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExprnotRule());
					}
					setWithLastConsumed($current, "expr", lv_expr_0_0, "not");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getExprnotAccess().getExpr2ExpreqParserRuleCall_1_0());
				}
				lv_expr2_1_0=ruleExpreq
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprnotRule());
					}
					set(
						$current,
						"expr2",
						lv_expr2_1_0,
						"org.xtext.whpp.mydsl.Wh.Expreq");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpreq
entryRuleExpreq returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpreqRule()); }
	iv_ruleExpreq=ruleExpreq
	{ $current=$iv_ruleExpreq.current; }
	EOF;

// Rule Expreq
ruleExpreq returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getExpreqAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpreqAccess().getExprExprParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpreqRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"org.xtext.whpp.mydsl.Wh.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getExpreqAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleLexpr
entryRuleLexpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLexprRule()); }
	iv_ruleLexpr=ruleLexpr
	{ $current=$iv_ruleLexpr.current; }
	EOF;

// Rule Lexpr
ruleLexpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLexprAccess().getExprsExprParserRuleCall_0());
			}
			lv_exprs_0_0=ruleExpr
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getLexprRule());
				}
				add(
					$current,
					"exprs",
					lv_exprs_0_0,
					"org.xtext.whpp.mydsl.Wh.Expr");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

RULE_VARIABLE : 'A'..'Z' ('A'..'Z'|'a'..'z'|RULE_DIGIT)* (('-'|'+'|'.'|'/'|'_'|'&'|'->') ('A'..'Z'|'a'..'z'|RULE_DIGIT)+)* ('?'|'!')?;

RULE_SYMBOLE : 'a'..'z' ('A'..'Z'|'a'..'z'|RULE_DIGIT)* (('-'|'+'|'.'|'/'|'_'|'&'|'->') ('A'..'Z'|'a'..'z'|RULE_DIGIT)+)* ('?'|'!')?;

fragment RULE_DIGIT : '0'..'9';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
