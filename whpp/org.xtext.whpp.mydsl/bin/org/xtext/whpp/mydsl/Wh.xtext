grammar org.xtext.whpp.mydsl.Wh with org.eclipse.xtext.common.Terminals

generate wh "http://www.xtext.org/whpp/mydsl/Wh"

Model:
	(functions+=Function)*
;

Function:
	'function' name=SYMBOLE ':' definition=Definition 
;

Definition:
	('read' input=Input)
	('%' commands=Commands)
	('%''write' output=Output)
;

Input:
	variables=Variables
;

Output:
	variables=Variables
;

Variables:
	variables+=VARIABLE (',' variables+=VARIABLE)*	
;

Commands:
	commands+=Command (';' commands+=Command)*
;

Command:
	command='nop' 
	| variables=Variables command=':=' exrps=Exprs 
	| command='while' expr=Expr 'do' commands=Commands 'od'
	| command='for' expr=Expr 'do' commands=Commands 'od' 
	| command='if' expr=Expr 'then' commands_then=Commands ('else' commands_else=Commands)? 'fi'
	| command='foreach' expr=Expr 'in' expr_in=Expr 'do' commands=Commands 'od'
;

Exprs:
	exprs+=Expr (',' exprs+=Expr)*
;

Expr:
	=>exprsimple1=Exprsimple (=>expr='=?' exprsimple2=Exprsimple)? | exprand=Exprand
;

Exprsimple:
	expr=('nil'|VARIABLE|SYMBOLE) |
	'(' expr=('cons'|'list') exprs=Lexpr ')' |
	'(' expr=('hd'|'tl')  expr2=Expr ')'   |
	'(' expr=SYMBOLE exprs=Lexpr ')' 
;

Exprand :
	exprG=Expror ( expr='and'  exprD=Exprand)?
;
Expror :
	exprG=Exprnot ( expr='or'  exprD=Expror)?
;
Exprnot :
	(expr='not' )? expr2=Expreq
;
Expreq :
	 '('expr=Expr')'
;
Lexpr :
	(exprs+=Expr)+
;


	
terminal VARIABLE:
	('A'..'Z') (('A'..'Z') | ('a'..'z') | DIGIT)* 
	(('-' | '+' | '.' | '/' | '_' | '&' | '->') (('A'..'Z') | ('a'..'z') | DIGIT)+)* ('?'|'!')?
;


terminal SYMBOLE:
	('a'..'z') (('A'..'Z') | ('a'..'z') | DIGIT)* 
	(('-' | '+' | '.' | '/' | '_' | '&' | '->') (('A'..'Z') | ('a'..'z') | DIGIT)+)* ('?'|'!')?
;

terminal DIGIT:
	('0'..'9')
;